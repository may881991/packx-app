{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar isTablet = function isTablet() {\n  var pixelDensity = PixelRatio.get();\n  var adjustedWidth = width * pixelDensity;\n  var adjustedHeight = height * pixelDensity;\n\n  if (pixelDensity < 2 && (adjustedWidth >= 1000 || adjustedHeight >= 1000)) {\n    return true;\n  } else {\n    return pixelDensity === 2 && (adjustedWidth >= 1920 || adjustedHeight >= 1920);\n  }\n};\n\nvar useDetectDevice = {\n  isAndroid: Platform.OS === 'android',\n  isIOS: Platform.OS === 'ios',\n  isTablet: isTablet()\n};\nexport { useDetectDevice };","map":{"version":3,"sources":["index.ts"],"names":["height","Dimensions","isTablet","pixelDensity","PixelRatio","adjustedWidth","width","adjustedHeight","useDetectDevice","isAndroid","Platform","isIOS"],"mappings":";;;;AAGA,sBAA0BC,UAAU,CAAVA,GAAAA,CAA1B,QAA0BA,CAA1B;AAAA,IAAM,KAAN,mBAAM,KAAN;AAAA,IAAeD,MAAf,mBAAeA,MAAf;;AAEA,IAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM;EACrB,IAAIC,YAAY,GAAGC,UAAU,CAA7B,GAAmBA,EAAnB;EACA,IAAMC,aAAa,GAAGC,KAAK,GAA3B,YAAA;EACA,IAAMC,cAAc,GAAGP,MAAM,GAA7B,YAAA;;EACA,IAAIG,YAAY,GAAZA,CAAAA,KAAqBE,aAAa,IAAbA,IAAAA,IAAyBE,cAAc,IAAhE,IAAIJ,CAAJ,EAA2E;IACzE,OAAA,IAAA;EADF,CAAA,MAEO;IACL,OACEA,YAAY,KAAZA,CAAAA,KAAuBE,aAAa,IAAbA,IAAAA,IAAyBE,cAAc,IADhE,IACEJ,CADF;EAGD;AAVH,CAAA;;AAaA,IAAMK,eAAiC,GAAG;EACxCC,SAAS,EAAEC,QAAQ,CAARA,EAAAA,KAD6B,SAAA;EAExCC,KAAK,EAAED,QAAQ,CAARA,EAAAA,KAFiC,KAAA;EAGxCR,QAAQ,EAAEA,QAAQ;AAHsB,CAA1C;AAMA,SAAA,eAAA","sourcesContent":["import { Platform, PixelRatio, Dimensions } from 'react-native';\nimport type { IUseDetectDevice } from './model';\n\nconst { width, height } = Dimensions.get('window');\n\nconst isTablet = () => {\n  let pixelDensity = PixelRatio.get();\n  const adjustedWidth = width * pixelDensity;\n  const adjustedHeight = height * pixelDensity;\n  if (pixelDensity < 2 && (adjustedWidth >= 1000 || adjustedHeight >= 1000)) {\n    return true;\n  } else {\n    return (\n      pixelDensity === 2 && (adjustedWidth >= 1920 || adjustedHeight >= 1920)\n    );\n  }\n};\n\nconst useDetectDevice: IUseDetectDevice = {\n  isAndroid: Platform.OS === 'android',\n  isIOS: Platform.OS === 'ios',\n  isTablet: isTablet(),\n};\n\nexport { useDetectDevice };\n"]},"metadata":{},"sourceType":"module"}