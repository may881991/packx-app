{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useImperativeHandle, useMemo, useRef } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dropdown from \"../Dropdown\";\nimport { styles } from \"./styles\";\nvar SelectCountryConponent = React.forwardRef(function (props, currentRef) {\n  var testID = props.testID,\n      itemTestIDField = props.itemTestIDField,\n      data = props.data,\n      value = props.value,\n      valueField = props.valueField,\n      labelField = props.labelField,\n      imageField = props.imageField,\n      selectedTextStyle = props.selectedTextStyle,\n      imageStyle = props.imageStyle;\n  var ref = useRef(null);\n  useImperativeHandle(currentRef, function () {\n    return {\n      open: eventOpen,\n      close: eventClose\n    };\n  });\n\n  var eventOpen = function eventOpen() {\n    ref.current.open();\n  };\n\n  var eventClose = function eventClose() {\n    ref.current.close();\n  };\n\n  var _renderItem = function _renderItem(item) {\n    return React.createElement(View, {\n      style: styles.item\n    }, React.createElement(Image, {\n      source: item[imageField],\n      style: [styles.image, imageStyle]\n    }), React.createElement(Text, {\n      style: [styles.selectedTextStyle, selectedTextStyle]\n    }, item[labelField]));\n  };\n\n  var selectItem = useMemo(function () {\n    var index = data.findIndex(function (e) {\n      return e[valueField] === value;\n    });\n    return data[index];\n  }, [data, valueField, value]);\n  return React.createElement(Dropdown, _extends({\n    testID: testID,\n    itemTestIDField: itemTestIDField,\n    ref: ref\n  }, props, {\n    renderItem: _renderItem,\n    renderLeftIcon: function renderLeftIcon() {\n      if (selectItem !== null && selectItem !== void 0 && selectItem.image) {\n        return React.createElement(Image, {\n          source: selectItem.image,\n          style: [styles.image, imageStyle]\n        });\n      } else {\n        return null;\n      }\n    }\n  }));\n});\nexport default SelectCountryConponent;","map":{"version":3,"sources":["index.tsx"],"names":["SelectCountryConponent","imageStyle","ref","useRef","useImperativeHandle","open","close","eventClose","eventOpen","_renderItem","item","styles","selectItem","useMemo","index","data","e"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,mBAAA,EAAA,OAAA,EAAA,MAAA,QAAA,OAAA;;;;AAEA,OAAA,QAAA;AAEA,SAAA,MAAA;AAEA,IAAMA,sBAAsB,GAAG,KAAK,CAAL,UAAA,CAC7B,UAAA,KAAA,EAAA,UAAA,EAAuB;EACrB,IAAM,MAAN,GAAA,KAAA,CAAM,MAAN;EAAA,IAAM,eAAN,GAAA,KAAA,CAAM,eAAN;EAAA,IAAM,IAAN,GAAA,KAAA,CAAM,IAAN;EAAA,IAAM,KAAN,GAAA,KAAA,CAAM,KAAN;EAAA,IAAM,UAAN,GAAA,KAAA,CAAM,UAAN;EAAA,IAAM,UAAN,GAAA,KAAA,CAAM,UAAN;EAAA,IAAM,UAAN,GAAA,KAAA,CAAM,UAAN;EAAA,IAAM,iBAAN,GAAA,KAAA,CAAM,iBAAN;EAAA,IASEC,UATF,GAAA,KAAA,CASEA,UATF;EAWA,IAAMC,GAAQ,GAAGC,MAAM,CAAvB,IAAuB,CAAvB;EAEAC,mBAAmB,CAAA,UAAA,EAAa,YAAM;IACpC,OAAO;MAAEC,IAAI,EAAN,SAAA;MAAmBC,KAAK,EAAEC;IAA1B,CAAP;EADFH,CAAmB,CAAnBA;;EAIA,IAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;IACtBN,GAAG,CAAHA,OAAAA,CAAAA,IAAAA;EADF,CAAA;;EAIA,IAAMK,UAAU,GAAG,SAAbA,UAAa,GAAM;IACvBL,GAAG,CAAHA,OAAAA,CAAAA,KAAAA;EADF,CAAA;;EAIA,IAAMO,WAAW,GAAIC,SAAfD,WAAeC,CAAAA,IAAD,EAAe;IACjC,OACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;MAAM,KAAK,EAAEC,MAAM,CAACD;IAApB,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAO,MAAM,EAAEA,IAAI,CAAnB,UAAmB,CAAnB;MAAiC,KAAK,EAAE,CAACC,MAAM,CAAP,KAAA,EAAA,UAAA;IAAxC,CAAA,CADF,EAEE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;MAAM,KAAK,EAAE,CAACA,MAAM,CAAP,iBAAA,EAAA,iBAAA;IAAb,CAAA,EACGD,IAAI,CAJX,UAIW,CADP,CAFF,CADF;EADF,CAAA;;EAWA,IAAME,UAAU,GAAGC,OAAO,CAAC,YAAM;IAC/B,IAAMC,KAAK,GAAGC,IAAI,CAAJA,SAAAA,CAAgBC,UAAAA,CAAD;MAAA,OAAOA,CAAC,CAADA,UAAC,CAADA,KAApC,KAA6B;IAAA,CAAfD,CAAd;IACA,OAAOA,IAAI,CAAX,KAAW,CAAX;EAFwB,CAAA,EAGvB,CAAA,IAAA,EAAA,UAAA,EAHH,KAGG,CAHuB,CAA1B;EAKA,OACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA;IACE,MAAM,EADR,MAAA;IAEE,eAAe,EAFjB,eAAA;IAGE,GAAG,EAAEb;EAHP,CAAA,EAAA,KAAA,EAAA;IAKE,UAAU,EALZ,WAAA;IAME,cAAc,EAAE,0BAAM;MACpB,IAAIU,UAAJ,KAAA,IAAIA,IAAAA,UAAJ,KAAA,KAAA,CAAIA,IAAAA,UAAU,CAAd,KAAA,EAAuB;QACrB,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;UACE,MAAM,EAAEA,UAAU,CADpB,KAAA;UAEE,KAAK,EAAE,CAACD,MAAM,CAAP,KAAA,EAAA,UAAA;QAFT,CAAA,CADF;MADF,CAAA,MAOO;QACL,OAAA,IAAA;MACD;IACF;EAjBH,CAAA,CAAA,CADF;AA3CJ,CAA+B,CAA/B;AAmEA,eAAA,sBAAA","sourcesContent":["import React, { useImperativeHandle, useMemo, useRef } from 'react';\nimport { Image, View, Text } from 'react-native';\nimport Dropdown from '../Dropdown';\nimport type { SelectCountryProps } from './model';\nimport { styles } from './styles';\n\nconst SelectCountryConponent = React.forwardRef<any, SelectCountryProps>(\n  (props, currentRef) => {\n    const {\n      testID,\n      itemTestIDField,\n      data,\n      value,\n      valueField,\n      labelField,\n      imageField,\n      selectedTextStyle,\n      imageStyle,\n    } = props;\n    const ref: any = useRef(null);\n\n    useImperativeHandle(currentRef, () => {\n      return { open: eventOpen, close: eventClose };\n    });\n\n    const eventOpen = () => {\n      ref.current.open();\n    };\n\n    const eventClose = () => {\n      ref.current.close();\n    };\n\n    const _renderItem = (item: any) => {\n      return (\n        <View style={styles.item}>\n          <Image source={item[imageField]} style={[styles.image, imageStyle]} />\n          <Text style={[styles.selectedTextStyle, selectedTextStyle]}>\n            {item[labelField]}\n          </Text>\n        </View>\n      );\n    };\n\n    const selectItem = useMemo(() => {\n      const index = data.findIndex((e) => e[valueField] === value);\n      return data[index];\n    }, [data, valueField, value]);\n\n    return (\n      <Dropdown\n        testID={testID}\n        itemTestIDField={itemTestIDField}\n        ref={ref}\n        {...props}\n        renderItem={_renderItem}\n        renderLeftIcon={() => {\n          if (selectItem?.image) {\n            return (\n              <Image\n                source={selectItem.image}\n                style={[styles.image, imageStyle]}\n              />\n            );\n          } else {\n            return null;\n          }\n        }}\n      />\n    );\n  }\n);\n\nexport default SelectCountryConponent;\n"]},"metadata":{},"sourceType":"module"}