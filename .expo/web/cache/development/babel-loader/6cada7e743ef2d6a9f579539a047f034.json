{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport CInput from \"../TextInput\";\nimport { useDeviceOrientation } from \"../../useDeviceOrientation\";\nimport { useDetectDevice } from \"../../toolkits\";\nimport { styles } from \"./styles\";\nimport _ from 'lodash';\nvar isTablet = useDetectDevice.isTablet,\n    isIOS = useDetectDevice.isIOS;\n\nvar ic_down = require(\"../../assets/down.png\");\n\nvar defaultProps = {\n  placeholder: 'Select item',\n  activeColor: '#F6F7F8',\n  data: [],\n  style: {}\n};\nvar MultiSelectComponent = React.forwardRef(function (props, currentRef) {\n  var orientation = useDeviceOrientation();\n  var testID = props.testID,\n      itemTestIDField = props.itemTestIDField,\n      onChange = props.onChange,\n      data = props.data,\n      value = props.value,\n      style = props.style,\n      labelField = props.labelField,\n      valueField = props.valueField,\n      selectedStyle = props.selectedStyle,\n      selectedTextStyle = props.selectedTextStyle,\n      iconStyle = props.iconStyle,\n      activeColor = props.activeColor,\n      containerStyle = props.containerStyle,\n      fontFamily = props.fontFamily,\n      placeholderStyle = props.placeholderStyle,\n      _props$iconColor = props.iconColor,\n      iconColor = _props$iconColor === void 0 ? 'gray' : _props$iconColor,\n      inputSearchStyle = props.inputSearchStyle,\n      searchPlaceholder = props.searchPlaceholder,\n      placeholder = props.placeholder,\n      _props$search = props.search,\n      search = _props$search === void 0 ? false : _props$search,\n      _props$maxHeight = props.maxHeight,\n      maxHeight = _props$maxHeight === void 0 ? 340 : _props$maxHeight,\n      maxSelect = props.maxSelect,\n      _props$disable = props.disable,\n      disable = _props$disable === void 0 ? false : _props$disable,\n      _props$keyboardAvoidi = props.keyboardAvoiding,\n      keyboardAvoiding = _props$keyboardAvoidi === void 0 ? true : _props$keyboardAvoidi,\n      _props$inside = props.inside,\n      inside = _props$inside === void 0 ? false : _props$inside,\n      renderItem = props.renderItem,\n      renderLeftIcon = props.renderLeftIcon,\n      renderRightIcon = props.renderRightIcon,\n      renderSelectedItem = props.renderSelectedItem,\n      renderInputSearch = props.renderInputSearch,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      _props$showsVerticalS = props.showsVerticalScrollIndicator,\n      showsVerticalScrollIndicator = _props$showsVerticalS === void 0 ? true : _props$showsVerticalS,\n      _props$dropdownPositi = props.dropdownPosition,\n      dropdownPosition = _props$dropdownPositi === void 0 ? 'auto' : _props$dropdownPositi,\n      flatListProps = props.flatListProps,\n      _props$alwaysRenderIt = props.alwaysRenderItemSelected,\n      alwaysRenderItemSelected = _props$alwaysRenderIt === void 0 ? false : _props$alwaysRenderIt,\n      searchQuery = props.searchQuery,\n      statusBarIsTranslucent = props.statusBarIsTranslucent,\n      backgroundColor = props.backgroundColor;\n  var ref = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentValue = _useState4[0],\n      setCurrentValue = _useState4[1];\n\n  var _useState5 = useState(data),\n      _useState6 = _slicedToArray(_useState5, 2),\n      listData = _useState6[0],\n      setListData = _useState6[1];\n\n  var _useState7 = useState(Math.random()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      setKey = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      position = _useState10[0],\n      setPosition = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      focus = _useState12[0],\n      setFocus = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      keyboardHeight = _useState14[0],\n      setKeyboardHeight = _useState14[1];\n\n  var _Dimensions$get = Dimensions.get('window'),\n      W = _Dimensions$get.width,\n      H = _Dimensions$get.height;\n\n  var styleContainerVertical = useMemo(function () {\n    return {\n      backgroundColor: 'rgba(0,0,0,0.1)',\n      alignItems: 'center'\n    };\n  }, []);\n  var styleHorizontal = useMemo(function () {\n    return {\n      marginBottom: 20,\n      width: W / 2,\n      alignSelf: 'center'\n    };\n  }, [W]);\n  useImperativeHandle(currentRef, function () {\n    return {\n      open: eventOpen,\n      close: eventClose\n    };\n  });\n  useEffect(function () {\n    setListData(_toConsumableArray(data));\n  }, [data]);\n\n  var eventOpen = function eventOpen() {\n    if (!disable) {\n      setVisible(true);\n\n      if (onFocus) {\n        onFocus();\n      }\n    }\n  };\n\n  var eventClose = function eventClose() {\n    if (!disable) {\n      setVisible(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  };\n\n  var font = useCallback(function () {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily\n      };\n    } else {\n      return {};\n    }\n  }, [fontFamily]);\n  var getValue = useCallback(function () {\n    setCurrentValue(value ? _toConsumableArray(value) : []);\n  }, [value]);\n\n  var _measure = useCallback(function () {\n    if (ref && ref !== null && ref !== void 0 && ref.current) {\n      ref.current.measure(function (_width, _height, px, py, fx, fy) {\n        var isFull = orientation === 'LANDSCAPE' && !isTablet;\n        var w = Math.floor(px);\n        var top = isFull ? 20 : Math.floor(py) + Math.floor(fy) + 2;\n        var bottom = H - top;\n        var left = I18nManager.isRTL ? W - Math.floor(px) - Math.floor(fx) : Math.floor(fx);\n        setPosition({\n          isFull: isFull,\n          w: w,\n          top: top,\n          bottom: Math.floor(bottom),\n          left: left,\n          height: Math.floor(py)\n        });\n      });\n    }\n  }, [H, W, orientation]);\n\n  var onKeyboardDidShow = useCallback(function (e) {\n    _measure();\n\n    setKeyboardHeight(e.endCoordinates.height);\n  }, [_measure]);\n\n  var onKeyboardDidHide = function onKeyboardDidHide() {\n    setKeyboardHeight(0);\n  };\n\n  useEffect(function () {\n    var susbcriptionKeyboardDidShow = Keyboard.addListener('keyboardDidShow', onKeyboardDidShow);\n    var susbcriptionKeyboardDidHide = Keyboard.addListener('keyboardDidHide', onKeyboardDidHide);\n    return function () {\n      if (typeof (susbcriptionKeyboardDidShow === null || susbcriptionKeyboardDidShow === void 0 ? void 0 : susbcriptionKeyboardDidShow.remove) === 'function') {\n        susbcriptionKeyboardDidShow.remove();\n      } else {\n        Keyboard.removeListener('keyboardDidShow', onKeyboardDidShow);\n      }\n\n      if (typeof (susbcriptionKeyboardDidHide === null || susbcriptionKeyboardDidHide === void 0 ? void 0 : susbcriptionKeyboardDidHide.remove) === 'function') {\n        susbcriptionKeyboardDidHide.remove();\n      } else {\n        Keyboard.removeListener('keyboardDidHide', onKeyboardDidHide);\n      }\n    };\n  }, [onKeyboardDidShow]);\n  useEffect(function () {\n    getValue();\n  }, [getValue, value]);\n  var showOrClose = useCallback(function () {\n    if (!disable) {\n      _measure();\n\n      setVisible(!visible);\n      setListData(data);\n\n      if (!visible) {\n        if (onFocus) {\n          onFocus();\n        }\n      } else {\n        if (onBlur) {\n          onBlur();\n        }\n      }\n    }\n  }, [_measure, data, disable, onBlur, onFocus, visible]);\n  var onSearch = useCallback(function (text) {\n    if (text.length > 0) {\n      var defaultFilterFunction = function defaultFilterFunction(e) {\n        var _$get;\n\n        var item = (_$get = _.get(e, labelField)) === null || _$get === void 0 ? void 0 : _$get.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        var key = text.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        return item.indexOf(key) >= 0;\n      };\n\n      var propSearchFunction = function propSearchFunction(e) {\n        var labelText = _.get(e, labelField);\n\n        return searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery(text, labelText);\n      };\n\n      var dataSearch = data.filter(searchQuery ? propSearchFunction : defaultFilterFunction);\n      setListData(dataSearch);\n    } else {\n      setListData(data);\n    }\n  }, [data, labelField, searchQuery]);\n  var onSelect = useCallback(function (item) {\n    onSearch('');\n    var index = currentValue.findIndex(function (e) {\n      return e === _.get(item, valueField);\n    });\n\n    if (index > -1) {\n      currentValue.splice(index, 1);\n    } else {\n      if (maxSelect) {\n        if (currentValue.length < maxSelect) {\n          currentValue.push(_.get(item, valueField));\n        }\n      } else {\n        currentValue.push(_.get(item, valueField));\n      }\n    }\n\n    onChange(currentValue);\n    setKey(Math.random());\n  }, [currentValue, maxSelect, onChange, onSearch, valueField]);\n\n  var _renderDropdown = function _renderDropdown() {\n    return React.createElement(TouchableWithoutFeedback, {\n      testID: testID,\n      onPress: showOrClose\n    }, React.createElement(View, {\n      style: styles.dropdown\n    }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(), React.createElement(Text, {\n      style: [styles.textItem, placeholderStyle, font()]\n    }, placeholder), renderRightIcon ? renderRightIcon() : React.createElement(Image, {\n      source: ic_down,\n      style: [styles.icon, {\n        tintColor: iconColor\n      }, iconStyle]\n    })));\n  };\n\n  var checkSelected = useCallback(function (item) {\n    var index = currentValue.findIndex(function (e) {\n      return e === _.get(item, valueField);\n    });\n    return index > -1;\n  }, [currentValue, valueField]);\n\n  var _renderItem = useCallback(function (_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    var selected = checkSelected(item);\n    return React.createElement(TouchableOpacity, {\n      testID: _.get(item, itemTestIDField || labelField),\n      key: index,\n      onPress: function onPress() {\n        return onSelect(item);\n      },\n      style: [selected && _objectSpread({\n        backgroundColor: activeColor\n      }, styles.wrapItem)]\n    }, renderItem ? renderItem(item, selected) : React.createElement(View, {\n      style: styles.item\n    }, React.createElement(Text, {\n      style: [styles.textItem, placeholderStyle, font()]\n    }, _.get(item, labelField))));\n  }, [activeColor, checkSelected, font, itemTestIDField, labelField, onSelect, placeholderStyle, renderItem]);\n\n  var renderSearch = useCallback(function () {\n    if (search) {\n      if (renderInputSearch) {\n        return renderInputSearch(function (text) {\n          onSearch(text);\n        });\n      } else {\n        return React.createElement(CInput, {\n          testID: testID + ' input',\n          style: [styles.input, inputSearchStyle],\n          inputStyle: [inputSearchStyle, font()],\n          autoCorrect: false,\n          keyboardType: isIOS ? 'default' : 'visible-password',\n          placeholder: searchPlaceholder,\n          onChangeText: onSearch,\n          placeholderTextColor: \"gray\",\n          iconStyle: [{\n            tintColor: iconColor\n          }, iconStyle],\n          onFocus: function onFocus() {\n            return setFocus(true);\n          },\n          onBlur: function onBlur() {\n            setFocus(false);\n          }\n        });\n      }\n    }\n\n    return null;\n  }, [font, iconColor, iconStyle, inputSearchStyle, onSearch, renderInputSearch, search, searchPlaceholder, testID]);\n\n  var _renderListTop = useCallback(function () {\n    return React.createElement(TouchableWithoutFeedback, null, React.createElement(View, {\n      style: styles.flexShrink\n    }, React.createElement(FlatList, _extends({\n      testID: testID + ' flatlist'\n    }, flatListProps, {\n      keyboardShouldPersistTaps: \"handled\",\n      data: listData,\n      inverted: true,\n      renderItem: _renderItem,\n      keyExtractor: function keyExtractor(_item, index) {\n        return index.toString();\n      },\n      showsVerticalScrollIndicator: showsVerticalScrollIndicator\n    })), renderSearch()));\n  }, [_renderItem, flatListProps, listData, renderSearch, showsVerticalScrollIndicator, testID]);\n\n  var _renderListBottom = useCallback(function () {\n    return React.createElement(TouchableWithoutFeedback, null, React.createElement(View, {\n      style: styles.flexShrink\n    }, renderSearch(), React.createElement(FlatList, _extends({\n      testID: testID + ' flatlist'\n    }, flatListProps, {\n      keyboardShouldPersistTaps: \"handled\",\n      data: listData,\n      renderItem: _renderItem,\n      keyExtractor: function keyExtractor(_item, index) {\n        return index.toString();\n      },\n      showsVerticalScrollIndicator: showsVerticalScrollIndicator\n    }))));\n  }, [_renderItem, flatListProps, listData, renderSearch, showsVerticalScrollIndicator, testID]);\n\n  var _renderModal = useCallback(function () {\n    if (visible && position) {\n      var isFull = position.isFull,\n          w = position.w,\n          top = position.top,\n          bottom = position.bottom,\n          left = position.left,\n          height = position.height;\n\n      if (w && top && bottom) {\n        var styleVertical = {\n          left: left,\n          maxHeight: maxHeight\n        };\n        var isTopPosition = dropdownPosition === 'auto' ? bottom < (isIOS ? 200 : search ? 310 : 300) : dropdownPosition === 'top' ? true : false;\n        var topHeight = isTopPosition ? top - height : top;\n        var keyboardStyle = {};\n\n        if (keyboardAvoiding) {\n          if (renderInputSearch) {\n            if (keyboardHeight > 0 && bottom < keyboardHeight + height) {\n              if (isTopPosition) {\n                topHeight = H - keyboardHeight;\n              } else {\n                keyboardStyle = {\n                  backgroundColor: 'rgba(0,0,0,0.1)'\n                };\n                topHeight = H - keyboardHeight - 55;\n              }\n            }\n          } else {\n            if (focus && keyboardHeight > 0 && bottom < keyboardHeight + height) {\n              if (isTopPosition) {\n                topHeight = H - keyboardHeight;\n              } else {\n                keyboardStyle = {\n                  backgroundColor: 'rgba(0,0,0,0.1)'\n                };\n                topHeight = H - keyboardHeight - 55;\n              }\n            }\n          }\n        }\n\n        return React.createElement(Modal, {\n          transparent: true,\n          statusBarTranslucent: statusBarIsTranslucent,\n          visible: visible,\n          supportedOrientations: ['landscape', 'portrait'],\n          onRequestClose: showOrClose\n        }, React.createElement(TouchableWithoutFeedback, {\n          onPress: showOrClose\n        }, React.createElement(View, {\n          style: [styles.flex1, isFull && styleContainerVertical, backgroundColor && {\n            backgroundColor: backgroundColor\n          }, keyboardStyle]\n        }, React.createElement(View, {\n          style: [styles.wrapTop, {\n            height: topHeight,\n            width: w\n          }]\n        }, isTopPosition && React.createElement(View, {\n          style: [{\n            width: w\n          }, styles.container, containerStyle, isFull ? styleHorizontal : styleVertical]\n        }, _renderListTop())), React.createElement(View, {\n          style: styles.flex1\n        }, !isTopPosition && React.createElement(View, {\n          style: [{\n            width: w\n          }, styles.container, containerStyle, isFull ? styleHorizontal : styleVertical]\n        }, _renderListBottom())))));\n      }\n\n      return null;\n    }\n\n    return null;\n  }, [visible, position, maxHeight, dropdownPosition, search, keyboardAvoiding, statusBarIsTranslucent, showOrClose, styleContainerVertical, backgroundColor, containerStyle, styleHorizontal, _renderListTop, _renderListBottom, renderInputSearch, keyboardHeight, H, focus]);\n\n  var unSelect = function unSelect(item) {\n    if (!disable) {\n      onSelect(item);\n    }\n  };\n\n  var _renderItemSelected = function _renderItemSelected(inside) {\n    var list = data.filter(function (e) {\n      var check = value === null || value === void 0 ? void 0 : value.indexOf(_.get(e, valueField));\n\n      if (check !== -1) {\n        return e;\n      }\n    });\n    return React.createElement(View, {\n      style: [styles.rowSelectedItem, inside && styles.flex1]\n    }, list.map(function (e) {\n      if (renderSelectedItem) {\n        return React.createElement(TouchableOpacity, {\n          testID: _.get(e, itemTestIDField || labelField),\n          key: _.get(e, labelField),\n          onPress: function onPress() {\n            return unSelect(e);\n          }\n        }, renderSelectedItem(e, function () {\n          unSelect(e);\n        }));\n      } else {\n        return React.createElement(TouchableOpacity, {\n          testID: _.get(e, itemTestIDField || labelField),\n          key: _.get(e, labelField),\n          style: [styles.selectedItem, selectedStyle],\n          onPress: function onPress() {\n            return unSelect(e);\n          }\n        }, React.createElement(Text, {\n          style: [styles.selectedTextLeftItem, selectedTextStyle, font()]\n        }, _.get(e, labelField)), React.createElement(Text, {\n          style: [styles.selectedTextItem, selectedTextStyle]\n        }, \"\\u24E7\"));\n      }\n    }));\n  };\n\n  var _renderInside = function _renderInside() {\n    return React.createElement(View, {\n      style: [styles.mainWrap, style],\n      ref: ref,\n      onLayout: _measure\n    }, _renderDropdownInside(), _renderModal());\n  };\n\n  var _renderDropdownInside = function _renderDropdownInside() {\n    return React.createElement(TouchableWithoutFeedback, {\n      testID: testID,\n      onPress: showOrClose\n    }, React.createElement(View, {\n      style: styles.dropdownInside\n    }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(), value && (value === null || value === void 0 ? void 0 : value.length) > 0 ? _renderItemSelected(true) : React.createElement(Text, {\n      style: [styles.textItem, placeholderStyle, font()]\n    }, placeholder), renderRightIcon ? renderRightIcon() : React.createElement(Image, {\n      source: ic_down,\n      style: [styles.icon, {\n        tintColor: iconColor\n      }, iconStyle]\n    })));\n  };\n\n  if (inside) {\n    return _renderInside();\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: [styles.mainWrap, style],\n    ref: ref,\n    onLayout: _measure\n  }, _renderDropdown(), _renderModal()), (!visible || alwaysRenderItemSelected) && _renderItemSelected(false));\n});\nMultiSelectComponent.defaultProps = defaultProps;\nexport default MultiSelectComponent;","map":{"version":3,"sources":["index.tsx"],"names":["isIOS","ic_down","require","defaultProps","placeholder","activeColor","data","style","MultiSelectComponent","orientation","useDeviceOrientation","iconColor","search","maxHeight","disable","keyboardAvoiding","inside","showsVerticalScrollIndicator","dropdownPosition","alwaysRenderItemSelected","backgroundColor","ref","useRef","useState","Math","width","height","H","Dimensions","styleContainerVertical","useMemo","alignItems","styleHorizontal","marginBottom","W","alignSelf","useImperativeHandle","open","close","eventClose","useEffect","setListData","eventOpen","setVisible","onFocus","onBlur","font","useCallback","fontFamily","getValue","setCurrentValue","value","_measure","isFull","w","top","bottom","left","I18nManager","setPosition","onKeyboardDidShow","e","setKeyboardHeight","onKeyboardDidHide","susbcriptionKeyboardDidShow","Keyboard","susbcriptionKeyboardDidHide","showOrClose","onSearch","text","defaultFilterFunction","item","_","key","propSearchFunction","labelText","searchQuery","dataSearch","onSelect","index","currentValue","onChange","setKey","_renderDropdown","styles","dropdown","renderLeftIcon","renderRightIcon","tintColor","checkSelected","_renderItem","selected","itemTestIDField","wrapItem","renderItem","renderSearch","renderInputSearch","testID","setFocus","_renderListTop","flexShrink","_renderListBottom","_renderModal","visible","styleVertical","isTopPosition","topHeight","keyboardStyle","keyboardHeight","focus","flex1","unSelect","_renderItemSelected","list","check","renderSelectedItem","_renderInside","_renderDropdownInside","dropdownInside"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Keyboard,\n  Modal,\n  Text,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  KeyboardEvent,\n  I18nManager,\n} from 'react-native';\nimport CInput from '../TextInput';\nimport { useDeviceOrientation } from '../../useDeviceOrientation';\nimport { useDetectDevice } from '../../toolkits';\nimport { styles } from './styles';\nimport type { MultiSelectProps } from './model';\nimport _ from 'lodash';\n\nconst { isTablet, isIOS } = useDetectDevice;\nconst ic_down = require('../../assets/down.png');\n\nconst defaultProps = {\n  placeholder: 'Select item',\n  activeColor: '#F6F7F8',\n  data: [],\n  style: {},\n};\n\nconst MultiSelectComponent = React.forwardRef<any, MultiSelectProps>(\n  (props, currentRef) => {\n    const orientation = useDeviceOrientation();\n    const {\n      testID,\n      itemTestIDField,\n      onChange,\n      data,\n      value,\n      style,\n      labelField,\n      valueField,\n      selectedStyle,\n      selectedTextStyle,\n      iconStyle,\n      activeColor,\n      containerStyle,\n      fontFamily,\n      placeholderStyle,\n      iconColor = 'gray',\n      inputSearchStyle,\n      searchPlaceholder,\n      placeholder,\n      search = false,\n      maxHeight = 340,\n      maxSelect,\n      disable = false,\n      keyboardAvoiding = true,\n      inside = false,\n      renderItem,\n      renderLeftIcon,\n      renderRightIcon,\n      renderSelectedItem,\n      renderInputSearch,\n      onFocus,\n      onBlur,\n      showsVerticalScrollIndicator = true,\n      dropdownPosition = 'auto',\n      flatListProps,\n      alwaysRenderItemSelected = false,\n      searchQuery,\n      statusBarIsTranslucent,\n      backgroundColor,\n    } = props;\n\n    const ref = useRef<View>(null);\n    const [visible, setVisible] = useState<boolean>(false);\n    const [currentValue, setCurrentValue] = useState<any[]>([]);\n    const [listData, setListData] = useState<any[]>(data);\n    const [, setKey] = useState<number>(Math.random());\n    const [position, setPosition] = useState<any>();\n    const [focus, setFocus] = useState<boolean>(false);\n    const [keyboardHeight, setKeyboardHeight] = useState<number>(0);\n    const { width: W, height: H } = Dimensions.get('window');\n    const styleContainerVertical: ViewStyle = useMemo(() => {\n      return {\n        backgroundColor: 'rgba(0,0,0,0.1)',\n        alignItems: 'center',\n      };\n    }, []);\n    const styleHorizontal: ViewStyle = useMemo(() => {\n      return { marginBottom: 20, width: W / 2, alignSelf: 'center' };\n    }, [W]);\n\n    useImperativeHandle(currentRef, () => {\n      return { open: eventOpen, close: eventClose };\n    });\n\n    useEffect(() => {\n      setListData([...data]);\n    }, [data]);\n\n    const eventOpen = () => {\n      if (!disable) {\n        setVisible(true);\n        if (onFocus) {\n          onFocus();\n        }\n      }\n    };\n\n    const eventClose = () => {\n      if (!disable) {\n        setVisible(false);\n        if (onBlur) {\n          onBlur();\n        }\n      }\n    };\n\n    const font = useCallback(() => {\n      if (fontFamily) {\n        return {\n          fontFamily: fontFamily,\n        };\n      } else {\n        return {};\n      }\n    }, [fontFamily]);\n\n    const getValue = useCallback(() => {\n      setCurrentValue(value ? [...value] : []);\n    }, [value]);\n\n    const _measure = useCallback(() => {\n      if (ref && ref?.current) {\n        ref.current.measure((_width, _height, px, py, fx, fy) => {\n          const isFull = orientation === 'LANDSCAPE' && !isTablet;\n          const w = Math.floor(px);\n          const top = isFull ? 20 : Math.floor(py) + Math.floor(fy) + 2;\n          const bottom = H - top;\n          const left = I18nManager.isRTL\n            ? W - Math.floor(px) - Math.floor(fx)\n            : Math.floor(fx);\n\n          setPosition({\n            isFull,\n            w,\n            top,\n            bottom: Math.floor(bottom),\n            left,\n            height: Math.floor(py),\n          });\n        });\n      }\n    }, [H, W, orientation]);\n\n    const onKeyboardDidShow = useCallback(\n      (e: KeyboardEvent) => {\n        _measure();\n        setKeyboardHeight(e.endCoordinates.height);\n      },\n      [_measure]\n    );\n\n    const onKeyboardDidHide = () => {\n      setKeyboardHeight(0);\n    };\n\n    useEffect(() => {\n      const susbcriptionKeyboardDidShow = Keyboard.addListener(\n        'keyboardDidShow',\n        onKeyboardDidShow\n      );\n      const susbcriptionKeyboardDidHide = Keyboard.addListener(\n        'keyboardDidHide',\n        onKeyboardDidHide\n      );\n\n      return () => {\n        if (typeof susbcriptionKeyboardDidShow?.remove === 'function') {\n          susbcriptionKeyboardDidShow.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidShow', onKeyboardDidShow);\n        }\n\n        if (typeof susbcriptionKeyboardDidHide?.remove === 'function') {\n          susbcriptionKeyboardDidHide.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidHide', onKeyboardDidHide);\n        }\n      };\n    }, [onKeyboardDidShow]);\n\n    useEffect(() => {\n      getValue();\n    }, [getValue, value]);\n\n    const showOrClose = useCallback(() => {\n      if (!disable) {\n        _measure();\n        setVisible(!visible);\n        setListData(data);\n\n        if (!visible) {\n          if (onFocus) {\n            onFocus();\n          }\n        } else {\n          if (onBlur) {\n            onBlur();\n          }\n        }\n      }\n    }, [_measure, data, disable, onBlur, onFocus, visible]);\n\n    const onSearch = useCallback(\n      (text: string) => {\n        if (text.length > 0) {\n          const defaultFilterFunction = (e: any) => {\n            const item = _.get(e, labelField)\n              ?.toLowerCase()\n              .replace(' ', '')\n              .normalize('NFD')\n              .replace(/[\\u0300-\\u036f]/g, '');\n            const key = text\n              .toLowerCase()\n              .replace(' ', '')\n              .normalize('NFD')\n              .replace(/[\\u0300-\\u036f]/g, '');\n\n            return item.indexOf(key) >= 0;\n          };\n\n          const propSearchFunction = (e: any) => {\n            const labelText = _.get(e, labelField);\n\n            return searchQuery?.(text, labelText);\n          };\n\n          const dataSearch = data.filter(\n            searchQuery ? propSearchFunction : defaultFilterFunction\n          );\n          setListData(dataSearch);\n        } else {\n          setListData(data);\n        }\n      },\n      [data, labelField, searchQuery]\n    );\n\n    const onSelect = useCallback(\n      (item: any) => {\n        onSearch('');\n\n        const index = currentValue.findIndex(\n          (e) => e === _.get(item, valueField)\n        );\n        if (index > -1) {\n          currentValue.splice(index, 1);\n        } else {\n          if (maxSelect) {\n            if (currentValue.length < maxSelect) {\n              currentValue.push(_.get(item, valueField));\n            }\n          } else {\n            currentValue.push(_.get(item, valueField));\n          }\n        }\n        onChange(currentValue);\n        setKey(Math.random());\n      },\n      [currentValue, maxSelect, onChange, onSearch, valueField]\n    );\n\n    const _renderDropdown = () => {\n      return (\n        <TouchableWithoutFeedback testID={testID} onPress={showOrClose}>\n          <View style={styles.dropdown}>\n            {renderLeftIcon?.()}\n            <Text style={[styles.textItem, placeholderStyle, font()]}>\n              {placeholder}\n            </Text>\n            {renderRightIcon ? (\n              renderRightIcon()\n            ) : (\n              <Image\n                source={ic_down}\n                style={[styles.icon, { tintColor: iconColor }, iconStyle]}\n              />\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    };\n\n    const checkSelected = useCallback(\n      (item: any) => {\n        const index = currentValue.findIndex(\n          (e) => e === _.get(item, valueField)\n        );\n        return index > -1;\n      },\n      [currentValue, valueField]\n    );\n\n    const _renderItem = useCallback(\n      ({ item, index }: { item: any; index: number }) => {\n        const selected = checkSelected(item);\n        return (\n          <TouchableOpacity\n            testID={_.get(item, itemTestIDField || labelField)}\n            key={index}\n            onPress={() => onSelect(item)}\n            style={[\n              selected && {\n                backgroundColor: activeColor,\n                ...styles.wrapItem,\n              },\n            ]}\n          >\n            {renderItem ? (\n              renderItem(item, selected)\n            ) : (\n              <View style={styles.item}>\n                <Text style={[styles.textItem, placeholderStyle, font()]}>\n                  {_.get(item, labelField)}\n                </Text>\n              </View>\n            )}\n          </TouchableOpacity>\n        );\n      },\n      [\n        activeColor,\n        checkSelected,\n        font,\n        itemTestIDField,\n        labelField,\n        onSelect,\n        placeholderStyle,\n        renderItem,\n      ]\n    );\n\n    const renderSearch = useCallback(() => {\n      if (search) {\n        if (renderInputSearch) {\n          return renderInputSearch((text) => {\n            onSearch(text);\n          });\n        } else {\n          return (\n            <CInput\n              testID={testID + ' input'}\n              style={[styles.input, inputSearchStyle]}\n              inputStyle={[inputSearchStyle, font()]}\n              autoCorrect={false}\n              keyboardType={isIOS ? 'default' : 'visible-password'}\n              placeholder={searchPlaceholder}\n              onChangeText={onSearch}\n              placeholderTextColor=\"gray\"\n              iconStyle={[{ tintColor: iconColor }, iconStyle]}\n              onFocus={() => setFocus(true)}\n              onBlur={() => {\n                setFocus(false);\n              }}\n            />\n          );\n        }\n      }\n      return null;\n    }, [\n      font,\n      iconColor,\n      iconStyle,\n      inputSearchStyle,\n      onSearch,\n      renderInputSearch,\n      search,\n      searchPlaceholder,\n      testID,\n    ]);\n\n    const _renderListTop = useCallback(() => {\n      return (\n        <TouchableWithoutFeedback>\n          <View style={styles.flexShrink}>\n            <FlatList\n              testID={testID + ' flatlist'}\n              {...flatListProps}\n              keyboardShouldPersistTaps=\"handled\"\n              data={listData}\n              inverted\n              renderItem={_renderItem}\n              keyExtractor={(_item, index) => index.toString()}\n              showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n            />\n            {renderSearch()}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    }, [\n      _renderItem,\n      flatListProps,\n      listData,\n      renderSearch,\n      showsVerticalScrollIndicator,\n      testID,\n    ]);\n\n    const _renderListBottom = useCallback(() => {\n      return (\n        <TouchableWithoutFeedback>\n          <View style={styles.flexShrink}>\n            {renderSearch()}\n            <FlatList\n              testID={testID + ' flatlist'}\n              {...flatListProps}\n              keyboardShouldPersistTaps=\"handled\"\n              data={listData}\n              renderItem={_renderItem}\n              keyExtractor={(_item, index) => index.toString()}\n              showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n            />\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    }, [\n      _renderItem,\n      flatListProps,\n      listData,\n      renderSearch,\n      showsVerticalScrollIndicator,\n      testID,\n    ]);\n\n    const _renderModal = useCallback(() => {\n      if (visible && position) {\n        const { isFull, w, top, bottom, left, height } = position;\n        if (w && top && bottom) {\n          const styleVertical: ViewStyle = { left: left, maxHeight: maxHeight };\n          const isTopPosition =\n            dropdownPosition === 'auto'\n              ? bottom < (isIOS ? 200 : search ? 310 : 300)\n              : dropdownPosition === 'top'\n              ? true\n              : false;\n          let topHeight = isTopPosition ? top - height : top;\n\n          let keyboardStyle: ViewStyle = {};\n          if (keyboardAvoiding) {\n            if (renderInputSearch) {\n              if (keyboardHeight > 0 && bottom < keyboardHeight + height) {\n                if (isTopPosition) {\n                  topHeight = H - keyboardHeight;\n                } else {\n                  keyboardStyle = { backgroundColor: 'rgba(0,0,0,0.1)' };\n                  topHeight = H - keyboardHeight - 55;\n                }\n              }\n            } else {\n              if (\n                focus &&\n                keyboardHeight > 0 &&\n                bottom < keyboardHeight + height\n              ) {\n                if (isTopPosition) {\n                  topHeight = H - keyboardHeight;\n                } else {\n                  keyboardStyle = { backgroundColor: 'rgba(0,0,0,0.1)' };\n                  topHeight = H - keyboardHeight - 55;\n                }\n              }\n            }\n          }\n\n          return (\n            <Modal\n              transparent\n              statusBarTranslucent={statusBarIsTranslucent}\n              visible={visible}\n              supportedOrientations={['landscape', 'portrait']}\n              onRequestClose={showOrClose}\n            >\n              <TouchableWithoutFeedback onPress={showOrClose}>\n                <View\n                  style={[\n                    styles.flex1,\n                    isFull && styleContainerVertical,\n                    backgroundColor && { backgroundColor: backgroundColor },\n                    keyboardStyle,\n                  ]}\n                >\n                  <View\n                    style={[\n                      styles.wrapTop,\n                      {\n                        height: topHeight,\n                        width: w,\n                      },\n                    ]}\n                  >\n                    {isTopPosition && (\n                      <View\n                        style={[\n                          { width: w },\n                          styles.container,\n                          containerStyle,\n                          isFull ? styleHorizontal : styleVertical,\n                        ]}\n                      >\n                        {_renderListTop()}\n                      </View>\n                    )}\n                  </View>\n                  <View style={styles.flex1}>\n                    {!isTopPosition && (\n                      <View\n                        style={[\n                          { width: w },\n                          styles.container,\n                          containerStyle,\n                          isFull ? styleHorizontal : styleVertical,\n                        ]}\n                      >\n                        {_renderListBottom()}\n                      </View>\n                    )}\n                  </View>\n                </View>\n              </TouchableWithoutFeedback>\n            </Modal>\n          );\n        }\n        return null;\n      }\n      return null;\n    }, [\n      visible,\n      position,\n      maxHeight,\n      dropdownPosition,\n      search,\n      keyboardAvoiding,\n      statusBarIsTranslucent,\n      showOrClose,\n      styleContainerVertical,\n      backgroundColor,\n      containerStyle,\n      styleHorizontal,\n      _renderListTop,\n      _renderListBottom,\n      renderInputSearch,\n      keyboardHeight,\n      H,\n      focus,\n    ]);\n\n    const unSelect = (item: any) => {\n      if (!disable) {\n        onSelect(item);\n      }\n    };\n\n    const _renderItemSelected = (inside: boolean) => {\n      const list = data.filter((e: any) => {\n        const check = value?.indexOf(_.get(e, valueField));\n        if (check !== -1) {\n          return e;\n        }\n      });\n\n      return (\n        <View style={[styles.rowSelectedItem, inside && styles.flex1]}>\n          {list.map((e) => {\n            if (renderSelectedItem) {\n              return (\n                <TouchableOpacity\n                  testID={_.get(e, itemTestIDField || labelField)}\n                  key={_.get(e, labelField)}\n                  onPress={() => unSelect(e)}\n                >\n                  {renderSelectedItem(e, () => {\n                    unSelect(e);\n                  })}\n                </TouchableOpacity>\n              );\n            } else {\n              return (\n                <TouchableOpacity\n                  testID={_.get(e, itemTestIDField || labelField)}\n                  key={_.get(e, labelField)}\n                  style={[styles.selectedItem, selectedStyle]}\n                  onPress={() => unSelect(e)}\n                >\n                  <Text\n                    style={[\n                      styles.selectedTextLeftItem,\n                      selectedTextStyle,\n                      font(),\n                    ]}\n                  >\n                    {_.get(e, labelField)}\n                  </Text>\n                  <Text style={[styles.selectedTextItem, selectedTextStyle]}>\n                    ⓧ\n                  </Text>\n                </TouchableOpacity>\n              );\n            }\n          })}\n        </View>\n      );\n    };\n\n    const _renderInside = () => {\n      return (\n        <View style={[styles.mainWrap, style]} ref={ref} onLayout={_measure}>\n          {_renderDropdownInside()}\n          {_renderModal()}\n        </View>\n      );\n    };\n\n    const _renderDropdownInside = () => {\n      return (\n        <TouchableWithoutFeedback testID={testID} onPress={showOrClose}>\n          <View style={styles.dropdownInside}>\n            {renderLeftIcon?.()}\n            {value && value?.length > 0 ? (\n              _renderItemSelected(true)\n            ) : (\n              <Text style={[styles.textItem, placeholderStyle, font()]}>\n                {placeholder}\n              </Text>\n            )}\n            {renderRightIcon ? (\n              renderRightIcon()\n            ) : (\n              <Image\n                source={ic_down}\n                style={[styles.icon, { tintColor: iconColor }, iconStyle]}\n              />\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    };\n\n    if (inside) {\n      return _renderInside();\n    }\n\n    return (\n      <>\n        <View style={[styles.mainWrap, style]} ref={ref} onLayout={_measure}>\n          {_renderDropdown()}\n          {_renderModal()}\n        </View>\n        {(!visible || alwaysRenderItemSelected) && _renderItemSelected(false)}\n      </>\n    );\n  }\n);\n\nMultiSelectComponent.defaultProps = defaultProps;\n\nexport default MultiSelectComponent;\n"]},"metadata":{},"sourceType":"module"}